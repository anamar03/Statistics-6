set.seed(20)
library(truncnorm)

############ DATA SIMULATION ############
# Experiment 1 ###############################################
## Variables
N1 = 71 # Divide 'equally' into two groups, because groupsize isn't mentioned
N10 = 35 
N11 = 36
NSTIM1 = 60 
NEXAMPLARS1 = 15
NCAT = 4 
COND1 = 2 # 0 = control; 1 = low fluency
M10 = 6.26 
M11 = 6.11
COHENSD1 = .52
SD1 = (M10 - M11) / COHENSD1
lower.limit = 1
upper.limit = 9


## Create dataset
### Columns

PPdf1 <- c(rep(1:N10, NSTIM1), rep((N10+1):N1, NSTIM1)) 
###### Participant column: 1 to 35 (each pp in control) gets repeated 60 times (for each stimulus) 
###### Participant column: the above gets repeated but now 36 to 71 (each pp in low fluency)

STIMdf1 <- c(rep(1:NSTIM1, each = N10), rep(1:NSTIM1, each = N11)) 
###### Stimulus column: Each stimulus gets repeated 35 times (for each participant in control condition)
###### Stimulus column: Each stimulus gets repeated 36 times (for each pp in low fluency)

CATdf1 <- c(rep(1:NCAT, each = NEXAMPLARS1*N10), rep(1:NCAT, each = NEXAMPLARS1*N11)) 
###### Category column: Every category gets repeated 15 x 35 times (for control)
###### Category column: Every category gets repeated 15 x 36 times (for low fluency)

CONDdf1 <- c(rep(0, NSTIM1 * N10), rep(1, NSTIM1*N11)) 
###### Condition column: O gets repeated 60 x 35 times and afterwards 1 gets repeated 60 x 36 times


control1 <- c(rtruncnorm(NSTIM1, a = lower.limit, b = upper.limit, mean = M10, sd = SD1))
fluency1 <- c(rtruncnorm(NSTIM1, a = lower.limit, b = upper.limit, mean = M11, sd = SD1))

SCORE_control1 <- c()
SCORE_fluency1 <- c()

for (i in control1){ #stimulus scores are drawn for each participant with value drawn above as mean
  SCORE_control1 <- c(SCORE_control1,(rtruncnorm(N10, a = lower.limit, b = upper.limit, mean = i, sd = 1)))
}

for (i in fluency1){ #stimulus scores are drawn for each participant with value drawn above as mean
  SCORE_fluency1 <- c(SCORE_fluency1,(rtruncnorm(N11, a = lower.limit, b = upper.limit, mean = i, sd = 1)))
}

SCOREdf1 <- c()
SCOREdf1 <- c(SCORE_control1, SCORE_fluency1)

### Converge to dataframe
df1 <- data.frame(PPdf1, STIMdf1, CATdf1, CONDdf1, SCOREdf1)

# Experiment 2 ###############################################
## Variables
N2 = 43
N20 = 22
N21 = 21
NSTIM2 = 30
NFEAT2 = 5
NCAT2 = 6
COND2 = 2 # 0 = control; 1 = low fluency
M20 = 6.70
M21 = 6.54
COHENSD2 = .79
SD2 = (M20 - M21) / COHENSD2

## Create dataset
### Columns

PPdf2 <- c(rep(1:N20, NSTIM2), rep((N20+1):N2, NSTIM2)) 
###### Participant column: 1 to 22 (each pp in control) gets repeated 30 times (for each stimulus) 
###### Participant column: the above gets repeated but now 23 to 43 (each pp in low fluency)

STIMdf2 <- c(rep(1:NSTIM2, each = N20), rep(1:NSTIM2, each = N21)) 
###### Stimulus column: Each stimulus gets repeated 22 times (for each participant in control condition)
###### Stimulus column: Each stimulus gets repeated 21 times (for each pp in low fluency)

CATdf2 <- c(rep(1:NCAT2, each = NFEAT2*N20), rep(1:NCAT2, each = NFEAT2*N21)) 
###### Category column: Every category gets repeated 5 x 22 times (for control)
###### Category column: Every category gets repeated 5 x 21 times (for low fluency)

CONDdf2 <- c(rep(0, NSTIM2 * N20), rep(1, NSTIM2 * N21)) 
###### Condition column: O gets repeated 30 x 22 times and afterwards 1 gets repeated 30 x 21 times

control2 <- c(rtruncnorm(NSTIM2, a = lower.limit, b = upper.limit, mean = M20, sd = SD2))
fluency2 <- c(rtruncnorm(NSTIM2, a = lower.limit, b = upper.limit, mean = M21, sd = SD2))

SCORE_control2 <- c()
SCORE_fluency2 <- c()

for (i in control2){ #stimulus scores are drawn for each participant with value drawn above as mean
  SCORE_control2 <- c(SCORE_control2,(rtruncnorm(N20, a = lower.limit, b = upper.limit, mean = i, sd = 1)))
}

for (i in fluency2){ #stimulus scores are drawn for each participant with value drawn above as mean
  SCORE_fluency2 <- c(SCORE_fluency2,(rtruncnorm(N21, a = lower.limit, b = upper.limit, mean = i, sd = 1)))
}

SCOREdf2 <- c()
SCOREdf2 <- c(SCORE_control2, SCORE_fluency2)

### Converge to dataframe
df2 <- data.frame(PPdf2, STIMdf2, CATdf2, CONDdf2, SCOREdf2)

# Experiment 3 ###############################################
## Variables
N3 = 164
N30 = 82
N31 = 82
NSTIM3 = 60 #15 examplars for each category
NEXAMPLARS3 = NEXAMPLARS1
NCAT3 = 4 
COND3 = 2 # 0 = control; 1 = low fluency
M30 = 6.12
M31 = 6.27
COHENSD3 = .52
SD3 = (M31 - M30) / COHENSD3

## Create dataset
### Columns

PPdf3 <- c(rep(1:N30, NSTIM3), rep((N30+1):N3, NSTIM3)) 
###### Participant column: 1 to 82 (each pp in control) gets repeated 60 times (for each stimulus) 
###### Participant column: the above gets repeated but now 83 to 164 (each pp in low fluency)

STIMdf3 <- c(rep(1:NSTIM3, each = N30), rep(1:NSTIM3, each = N31)) 
###### Stimulus column: Each stimulus gets repeated 82 times (for each participant in control condition)
###### Stimulus column: Each stimulus gets repeated 82 times (for each pp in low fluency)

CATdf3 <- c(rep(1:NCAT3, each = NEXAMPLARS3*N30), rep(1:NCAT3, each = NEXAMPLARS3*N31)) 
###### Category column: Every category gets repeated 15 x 82 times (for control)
###### Category column: Every category gets repeated 15 x 82 times (for low fluency)

CONDdf3 <- c(rep(0, NSTIM3 * N30), rep(1, NSTIM3 * N31)) 
###### Condition column: O gets repeated 60 x 82 times and afterwards 1 gets repeated 60 x 82 times

control3 <- c(rtruncnorm(NSTIM3, a = lower.limit, b = upper.limit, mean = M30, sd = SD3))
fluency3 <- c(rtruncnorm(NSTIM3, a = lower.limit, b = upper.limit, mean = M31, sd = SD3))

SCORE_control3 <- c()
SCORE_fluency3 <- c()

for (i in control3){ #stimulus scores are drawn for each participant with value drawn above as mean
  SCORE_control3 <- c(SCORE_control3,(rtruncnorm(N30, a = lower.limit, b = upper.limit, mean = i, sd = 1)))
}

for (i in fluency3){ #stimulus scores are drawn for each participant with value drawn above as mean
  SCORE_fluency3 <- c(SCORE_fluency3,(rtruncnorm(N31, a = lower.limit, b = upper.limit, mean = i, sd = 1)))
}

SCOREdf3 <- c()
SCOREdf3 <- c(SCORE_control3, SCORE_fluency3)


### Converge to dataframe
df3 <- data.frame(PPdf3, STIMdf3, CATdf3, CONDdf3, SCOREdf3)

# Experiment 4 ###############################################
## Variables
N4 = 39
NSTIM4 = 30 #15 examplars for each category
CAT4 = 2
COND4 = 2 # 0 = control; 1 = low fluency
M41 = ???
M42 = ???
COHENSD4 = ???
SD4 = (M42 - M41) / COHENSD4

## Create dataset
data_simulated <- rnorm(n= , mean= , sd= )

# Experiment 5: Experiment 1 & 3 combined #########
## Variables
N5 = 120 # Divide equally into three groups
N50 = N51 = N52 = N5 / 3
NSTIM5 = 60
NEXAMPLARS5 = 15
NCAT5 = 4 
COND5 = 3 # 0 = control; 1 = low fluency with explanation; 2 = low fluency without explanation
M50 = (6.26 + 6.12)/2 
M51 = 6.27
M52 = 6.11
SD50 = (SD1 + SD3) / 2
SD51 = SD3
SD52 = SD1
lower.limit = 1
upper.limit = 9


## Create dataset
### Columns

PPdf5 <- c(rep(1:N50, NSTIM5), rep((N50+1):(N50+N51), NSTIM5), rep((N50+N51+1):N5, NSTIM5))
###### Participant column: 1 to .. (each pp in control) gets repeated 60 times (for each stimulus) 
###### Participant column: the above gets repeated but now 'pp in control + 1'  to 'pp in control + low fluency with explanation'
###### Participant column: the above gets repeated but now 'pp in control + pp in fluency w expla + 1'  to 'pp in control + low fluency with expla + low fluency without expla'

STIMdf5 <- c(rep(1:NSTIM5, each = N50), rep(1:NSTIM5, each = N51), rep(1:NSTIM5, each = N52)) 
###### Stimulus column: Each stimulus gets repeated for each participant in control condition
###### Stimulus column: Each stimulus gets repeated for each participant in low fluency w expl condition
###### Stimulus column: Each stimulus gets repeated for each participant in low fluency w/o expl condition

CATdf5 <- c(rep(1:NCAT5, each = NEXAMPLARS5*N50), rep(1:NCAT5, each = NEXAMPLARS5*N51), rep(1:NCAT5, each = NEXAMPLARS5*N52)) 
###### Category column: Every category gets repeated 'number of examplars per category' x 'number of pp in control' times (for control)
###### Category column: Every category gets repeated 'number of examplars per category' x 'number of pp in low fluency w expl' times(for low fluency w expl)
###### Category column: Every category gets repeated 'number of examplars per category' x 'number of pp in low fluency w/o expl' times (for low fluency w/o expl)

CONDdf5 <- c(rep(0, NSTIM5 * N50), rep(1, NSTIM5*N51), rep(2, NSTIM5*N52)) 
###### Condition column: O gets repeated 60 x 'number of pp in control' times and afterwards 1 gets repeated 60 x 'n pp in low fluency w expl' times and afterwards 2 gets repeated 60 x 'n pp in low fluency w/o expl' times


control5 <- c(rtruncnorm(NSTIM5, a = lower.limit, b = upper.limit, mean = M50, sd = SD50)) # Means for each stimulus in control condition
fluencyw5 <- c(rtruncnorm(NSTIM5, a = lower.limit, b = upper.limit, mean = M51, sd = SD51)) # Means for each stimulus in low fluency w expl
fluencywo5 <- c(rtruncnorm(NSTIM5, a = lower.limit, b = upper.limit, mean = M51, sd = SD52)) # Means for each stimulus in low fluency w/o expl

SCORE_control5 <- c()
SCORE_fluencyw5 <- c()
SCORE_fluencywo5 <- c()

for (i in control5){ #stimulus scores are drawn for each participant with value drawn above as mean
  SCORE_control5 <- c(SCORE_control5,(rtruncnorm(N50, a = lower.limit, b = upper.limit, mean = i, sd = 1)))
}

for (i in fluencyw5){ #stimulus scores are drawn for each participant with value drawn above as mean
  SCORE_fluencyw5 <- c(SCORE_fluencyw5,(rtruncnorm(N51, a = lower.limit, b = upper.limit, mean = i, sd = 1)))
}

for (i in fluencywo5){ #stimulus scores are drawn for each participant with value drawn above as mean
  SCORE_fluencywo5 <- c(SCORE_fluencywo5,(rtruncnorm(N52, a = lower.limit, b = upper.limit, mean = i, sd = 1)))
}

SCOREdf5 <- c()
SCOREdf5 <- c(SCORE_control5, SCORE_fluencyw5, SCORE_fluencywo5)

### Converge to dataframe
df5 <- data.frame(PPdf5, STIMdf5, CATdf5, CONDdf5, SCOREdf5)


### Outlier handling
Q1 <- quantile(SCOREdf1,.25)
Q3 <- quantile(SCOREdf1,.75)
IQR <- (Q3 - Q1)
lower <- Q1-1.5*IQR
upper <- Q3+1.5*IQR

no_outliers_data <- df1 [(!(SCOREdf1 < lower) & !(SCOREdf1 > upper)),]

## percentage removed data (outliers)
observations_full <- length(df1)
observations_no_outliers <- length(no_outliers_data)
percentage_removed_observations <- ((observations_full-observations_no_outliers)/observations_full)*100

############# STATISTICAL TESTS ##############
# Experiment 1 - EXEMPLAR MEAN COMPARISON ####
## Descriptives 
### Overall mean and SD
experiment1_mean <- mean(SCOREdf1)
experiment1_sd <- sd(SCOREdf1)

### Means and SD per condition
experiment1_controlmean <- mean(SCOREdf1[CONDdf1=='0'])
experiment1_fluencymean<- mean(SCOREdf1[CONDdf1=='1'])

experiment1_controlsd <- sd(SCOREdf1[CONDdf1=='0'])
experiment1_fluencysd <- sd(SCOREdf1[CONDdf1=='1'])

### Means and SD per stimuli (per condition)
mean_stim <- c()
mean_stim_control <- c()
mean_stim_fluency <- c()
for (i in 1:NSTIM1){
  mean_stim <- c(mean_stim,(mean(SCOREdf1[STIMdf1==i])))
  mean_stim_control <- c(mean_stim_control,(mean(SCOREdf1[STIMdf1==i & CONDdf1=="0"])))
  mean_stim_fluency <- c(mean_stim_fluency,(mean(SCOREdf1[STIMdf1==i & CONDdf1=="1"])))                       
}

sd_stim <- c()
sd_stim_control <- c()
sd_stim_fluency <- c()
for (i in 1:NSTIM1){
  sd_stim <- c(sd_stim,(sd(SCOREdf1[STIMdf1==i])))
  sd_stim_control <- c(sd_stim_control,(sd(SCOREdf1[STIMdf1==i & CONDdf1=="0"])))
  sd_stim_fluency <- c(sd_stim_fluency,(sd(SCOREdf1[STIMdf1==i & CONDdf1=="1"])))                       
}

### Means and SD per stimulus category (per condition)
mean_cat <- c()
mean_cat_control <- c()
mean_cat_fluency <- c()
for (i in 1:NCAT){
  mean_cat <- c(mean_cat,(mean(SCOREdf1[CATdf1==i])))
  mean_cat_control <- c(mean_cat_control,(mean(SCOREdf1[CATdf1==i & CONDdf1=="0"])))
  mean_cat_fluency <- c(mean_cat_fluency,(mean(SCOREdf1[CATdf1==i & CONDdf1=="1"])))                       
}

sd_cat <- c()
sd_cat_control <- c()
sd_cat_fluency <- c()
for (i in 1:NCAT){
  sd_cat <- c(sd_cat,(sd(SCOREdf1[CATdf1==i])))
  sd_cat_control <- c(sd_cat_control,(sd(SCOREdf1[CATdf1==i & CONDdf1=="0"])))
  sd_cat_fluency <- c(sd_cat_fluency,(sd(SCOREdf1[CATdf1==i & CONDdf1=="1"])))                       
}

## Paired t-tests
"A paired sample t-test compared mean typicalty ratings for each exemplar in the low-fluency condition against mean typicality ratings for the corresponding exemplar in the control condition"
"--> since the sample size per condition differs this results in an unequal length in data, taking average of each exemplar solves this problem"
mean_stim_control <- c()
mean_stim_fluency <- c()
for (i in 1:NSTIM1){
  mean_stim_control <- c(mean_stim_control,(sum(SCOREdf1[STIMdf1==i & CONDdf1=="0"])/N10))
  mean_stim_fluency <- c(mean_stim_fluency,(sum(SCOREdf1[STIMdf1==i & CONDdf1=="1"])/N11))                       
}
mean_stim_all <- c()
mean_stim_all <- append(mean_stim_all,mean_stim_control)
mean_stim_all <- append(mean_stim_all,mean_stim_fluency)
condition <- c(rep(0:1, each = NSTIM1))

my_data_exp1 <- data.frame(mean_stim_all,condition)
results <- t.test(mean_stim_all ~ condition, data = my_data_exp1, paired = TRUE)
results

# Experiment 2 - EXEMPLAR MEAN COMPARISON (SHOULD BE THE SAME CODE AS EXP1) ####
## Descriptives 
### Overall mean and SD
experiment2_mean <- mean(SCOREdf2)
experiment2_sd <- sd(SCOREdf2)

### Means and SD per condition
experiment2_controlmean <- mean(SCOREdf2[CONDdf2=='0'])
experiment2_fluencymean<- mean(SCOREdf2[CONDdf2=='1'])

experiment2_controlsd <- sd(SCOREdf2[CONDdf2=='0'])
experiment2_fluencysd <- sd(SCOREdf2[CONDdf2=='1'])

### Means and SD per stimuli (per condition)
mean_stim2 <- c()
mean_stim_control2 <- c()
mean_stim_fluency2 <- c()
for (i in 1:NSTIM2){
  mean_stim2 <- c(mean_stim2,(mean(SCOREdf2[STIMdf2==i])))
  mean_stim_control2 <- c(mean_stim_control2,(mean(SCOREdf2[STIMdf2==i & CONDdf2=="0"])))
  mean_stim_fluency2 <- c(mean_stim_fluency2,(mean(SCOREdf2[STIMdf2==i & CONDdf2=="1"])))                       
}

sd_stim2 <- c()
sd_stim_control2 <- c()
sd_stim_fluency2 <- c()
for (i in 1:NSTIM2){
  sd_stim2 <- c(sd_stim2,(sd(SCOREdf2[STIMdf2==i])))
  sd_stim_control2 <- c(sd_stim_control2,(sd(SCOREdf2[STIMdf2==i & CONDdf2=="0"])))
  sd_stim_fluency2 <- c(sd_stim_fluency2,(sd(SCOREdf2[STIMdf2==i & CONDdf2=="1"])))                       
}

### Means and SD per stimulus category (per condition)
mean_cat2 <- c()
mean_cat_control2 <- c()
mean_cat_fluency2 <- c()
for (i in 1:NCAT2){
  mean_cat2 <- c(mean_cat2,(mean(SCOREdf2[CATdf2==i])))
  mean_cat_control2 <- c(mean_cat_control2,(mean(SCOREdf2[CATdf2==i & CONDdf2=="0"])))
  mean_cat_fluency2 <- c(mean_cat_fluency2,(mean(SCOREdf2[CATdf2==i & CONDdf2=="1"])))                       
}

sd_cat2 <- c()
sd_cat_control2 <- c()
sd_cat_fluency2 <- c()
for (i in 1:NCAT2){
  sd_cat2 <- c(sd_cat2,(sd(SCOREdf2[CATdf2==i])))
  sd_cat_control2 <- c(sd_cat_control2,(sd(SCOREdf2[CATdf2==i & CONDdf2=="0"])))
  sd_cat_fluency2 <- c(sd_cat_fluency2,(sd(SCOREdf2[CATdf2==i & CONDdf2=="1"])))                       
}

## Paired t-tests
mean_stim_control2 <- c()
mean_stim_fluency2 <- c()
for (i in 1:NSTIM2){
  mean_stim_control2 <- c(mean_stim_control2,(sum(SCOREdf2[STIMdf2==i & CONDdf2=="0"])/N20))
  mean_stim_fluency2 <- c(mean_stim_fluency2,(sum(SCOREdf2[STIMdf2==i & CONDdf2=="1"])/N21))                       
}
mean_stim_all2 <- c()
mean_stim_all2 <- append(mean_stim_all2,mean_stim_control2)
mean_stim_all2 <- append(mean_stim_all2,mean_stim_fluency2)
condition2 <- c(rep(0:1, each = NSTIM2))

my_data_exp2 <- data.frame(mean_stim_all2,condition2)
results2 <- t.test(mean_stim_all2 ~ condition2, data = my_data_exp2, paired = TRUE)
results2

# Experiment 3 - EXEMPLAR MEAN COMPARISON (SHOULD BE THE SAME CODE AS EXP1) ####
## Descriptives 
### Overall mean and SD
experiment3_mean <- mean(SCOREdf3)
experiment3_sd <- sd(SCOREdf3)

### Means and SD per condition
experiment3_controlmean <- mean(SCOREdf3[CONDdf3=='0'])
experiment3_fluencymean<- mean(SCOREdf3[CONDdf3=='1'])

experiment3_controlsd <- sd(SCOREdf3[CONDdf3=='0'])
experiment3_fluencysd <- sd(SCOREdf3[CONDdf3=='1'])

### Means and SD per stimuli (per condition)
mean_stim3 <- c()
mean_stim_control3 <- c()
mean_stim_fluency3 <- c()
for (i in 1:NSTIM3){
  mean_stim3 <- c(mean_stim3,(mean(SCOREdf3[STIMdf3==i])))
  mean_stim_control3 <- c(mean_stim_control3,(mean(SCOREdf3[STIMdf3==i & CONDdf3=="0"])))
  mean_stim_fluency3 <- c(mean_stim_fluency3,(mean(SCOREdf3[STIMdf3==i & CONDdf3=="1"])))                       
}

sd_stim3 <- c()
sd_stim_control3 <- c()
sd_stim_fluency3 <- c()
for (i in 1:NSTIM3){
  sd_stim3 <- c(sd_stim3,(sd(SCOREdf3[STIMdf3==i])))
  sd_stim_control3 <- c(sd_stim_control3,(sd(SCOREdf3[STIMdf3==i & CONDdf3=="0"])))
  sd_stim_fluency3 <- c(sd_stim_fluency3,(sd(SCOREdf3[STIMdf3==i & CONDdf3=="1"])))                       
}

### Means and SD per stimulus category (per condition)
mean_cat3 <- c()
mean_cat_control3 <- c()
mean_cat_fluency3 <- c()
for (i in 1:NCAT3){
  mean_cat3 <- c(mean_cat3,(mean(SCOREdf3[CATdf3==i])))
  mean_cat_control3 <- c(mean_cat_control3,(mean(SCOREdf3[CATdf3==i & CONDdf3=="0"])))
  mean_cat_fluency3 <- c(mean_cat_fluency3,(mean(SCOREdf3[CATdf3==i & CONDdf3=="1"])))                       
}

sd_cat3 <- c()
sd_cat_control3 <- c()
sd_cat_fluency3 <- c()
for (i in 1:NCAT3){
  sd_cat3 <- c(sd_cat3,(sd(SCOREdf3[CATdf3==i])))
  sd_cat_control3 <- c(sd_cat_control3,(sd(SCOREdf3[CATdf3==i & CONDdf3=="0"])))
  sd_cat_fluency3 <- c(sd_cat_fluency3,(sd(SCOREdf3[CATdf3==i & CONDdf3=="1"])))                       
}

# Paired t-tests
mean_stim_control3 <- c()
mean_stim_fluency3 <- c()
for (i in 1:NSTIM3){
  mean_stim_control3 <- c(mean_stim_control3,(sum(SCOREdf3[STIMdf3==i & CONDdf3=="0"])/N30))
  mean_stim_fluency3 <- c(mean_stim_fluency3,(sum(SCOREdf3[STIMdf3==i & CONDdf3=="1"])/N31))                       
}
mean_stim_all3 <- c()
mean_stim_all3 <- append(mean_stim_all3,mean_stim_control3)
mean_stim_all3 <- append(mean_stim_all3,mean_stim_fluency3)
condition3 <- c(rep(0:1, each = NSTIM3))

my_data_exp3 <- data.frame(mean_stim_all3,condition3)
results3 <- t.test(mean_stim_all3 ~ condition3, data = my_data_exp3, paired = TRUE)

# Experiment 4 - ??? ####
# Experiment 5 ####
## Descriptives 
### Overall mean and SD
experiment5_mean <- mean(SCOREdf5)
experiment5_sd <- sd(SCOREdf5)

### Means and SD per condition
experiment5_controlmean <- mean(SCOREdf5[CONDdf5=='0'])
experiment5_fluencywoemean<- mean(SCOREdf5[CONDdf5=='1'])
experiment5_fluencywemean<- mean(SCOREdf5[CONDdf5=='2'])

experiment5_controlsd <- sd(SCOREdf5[CONDdf5=='0'])
experiment5_fluencywoesd <- sd(SCOREdf5[CONDdf5=='1'])
experiment5_fluencywesd <- sd(SCOREdf5[CONDdf5=='2'])

### Means and SD per stimuli (per condition)
mean_stim5 <- c()
mean_stim_control5 <- c()
mean_stim_fluencywoe5 <- c()
mean_stim_fluencywe5 <- c()
for (i in 1:NSTIM5){
  mean_stim5 <- c(mean_stim5,(mean(SCOREdf5[STIMdf5==i])))
  mean_stim_control5 <- c(mean_stim_control5,(mean(SCOREdf3[STIMdf5==i & CONDdf5=="0"])))
  mean_stim_fluencywoe5 <- c(mean_stim_fluencywoe5,(mean(SCOREdf3[STIMdf5==i & CONDdf5=="1"]))) 
  mean_stim_fluencywe5 <- c(mean_stim_fluencywe5,(mean(SCOREdf3[STIMdf5==i & CONDdf5=="2"]))) 
}

sd_stim5 <- c()
sd_stim_control5 <- c()
sd_stim_fluencywoe5 <- c()
sd_stim_fluencywe5 <- c()
for (i in 1:NSTIM5){
  sd_stim5 <- c(sd_stim5,(sd(SCOREdf3[STIMdf5==i])))
  sd_stim_control5 <- c(sd_stim_control5,(sd(SCOREdf5[STIMdf5==i & CONDdf5=="0"])))
  sd_stim_fluencywoe5 <- c(sd_stim_fluencywoe5,(sd(SCOREdf5[STIMdf5==i & CONDdf5=="1"])))   
  sd_stim_fluencywe5 <- c(sd_stim_fluencywe5,(sd(SCOREdf5[STIMdf5==i & CONDdf5=="2"])))  
}

### Means and SD per stimulus category (per condition)
mean_cat5 <- c()
mean_cat_control5 <- c()
mean_cat_fluencywoe5 <- c()
mean_cat_fluencywe5 <- c()
for (i in 1:NCAT5){
  mean_cat5 <- c(mean_cat5,(mean(SCOREdf5[CATdf5==i])))
  mean_cat_control5 <- c(mean_cat_control5,(mean(SCOREdf5[CATdf5==i & CONDdf5=="0"])))
  mean_cat_fluencywoe5 <- c(mean_cat_fluencywoe5,(mean(SCOREdf5[CATdf5==i & CONDdf5=="1"]))) 
  mean_cat_fluencywe5 <- c(mean_cat_fluencywe5,(mean(SCOREdf5[CATdf5==i & CONDdf5=="2"]))) 
}

sd_cat5 <- c()
sd_cat_control5 <- c()
sd_cat_fluencywoe5 <- c()
sd_cat_fluencywe5 <- c()
for (i in 1:NCAT5){
  sd_cat5 <- c(sd_cat5,(sd(SCOREdf5[CATdf5==i])))
  sd_cat_control5 <- c(sd_cat_control5,(sd(SCOREdf5[CATdf5==i & CONDdf5=="0"])))
  sd_cat_fluencywoe5 <- c(sd_cat_fluencywoe5,(sd(SCOREdf5[CATdf5==i & CONDdf5=="1"]))) 
  sd_cat_fluencywe5 <- c(sd_cat_fluencywe5,(sd(SCOREdf5[CATdf5==i & CONDdf5=="1"]))) 
